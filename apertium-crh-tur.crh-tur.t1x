<?xml version="1.0" encoding="UTF-8"?>
<transfer default="chunk">
  <section-def-cats>
    <def-cat n="past">
      <cat-item tags="v.*.past.*"/>
    </def-cat>
    <def-cat n="aor">
      <cat-item tags="v.*.aor.*"/>
    </def-cat>
    <def-cat n="nom">
      <cat-item tags="n.*"/>
    </def-cat>
    <def-cat n="XD">
      <cat-item tags="n.*.XD.*"/>
    </def-cat>
    <def-cat n="ger_past">
      <cat-item tags="v.*.ger_past.*"/>
    </def-cat>
    <def-cat n="gpr_past">
      <cat-item tags="v.*.gpr_past"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_err">
      <attr-item tags="err_orth"/>
    </def-attr>
    <def-attr n="a_xd">
      <attr-item tags="XD"/>
    </def-attr>
    <def-attr n="a_cas">
      <attr-item tags="nom"/>
    </def-attr>
    <def-attr n="a_non_fin">
      <attr-item tags="ger_past"/>
      <attr-item tags="gpr_past"/>
    </def-attr>
    <def-attr n="a_pers_nbr">
      <attr-item tags="p1.sg"/>
      <attr-item tags="p2.sg"/>
      <attr-item tags="p3.sg"/>
      <attr-item tags="p1.pl"/>
      <attr-item tags="p2.pl"/>
      <attr-item tags="p3.pl"/>
	  <attr-item tags="p2.frm.sg"/> 
    </def-attr>
  </section-def-attrs>

  <section-def-vars>
    <def-var n="number"/>
  </section-def-vars>

  <section-def-macros>
    <def-macro n="f_strip_tags" npar="1">
          <let>
            <clip pos="1" side="tl" part="a_err"/>
            <lit v=""/>
          </let>
    </def-macro>
  </section-def-macros>

  <section-rules>

    <rule comment="REGLA: past">
      <pattern>
        <pattern-item n="past"/>
      </pattern>
      <action>
      <call-macro n="f_strip_tags"><with-param pos="1"/></call-macro>
<choose>
   <when>
       <!-- IF: a_pers_nbr IS p2.frm.sg -->
      <test><equal><clip pos="1" side="tl" part="a_pers_nbr"/> 
                             <lit-tag v="p2.frm.sg"/></equal></test>
        <!-- THEN: LET a_pers_nbr BE p2.pl -->
      <let><clip pos="1" side="tl" part="a_pers_nbr"/><lit-tag v="p2.pl"/></let>
    </when>
</choose>
        <let>
          <clip pos="1" side="tl" part="a_pers_nbr"/>
          <concat><lit v="+i"/><lit-tag v="cop.aor"/><clip pos="1" side="tl" part="a_pers_nbr"/></concat>
        </let>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="REGLA: AOR">
      <pattern>
        <pattern-item n="aor"/>
      </pattern>
      <action>
      <call-macro n="f_strip_tags"><with-param pos="1"/></call-macro>
<choose>
   <when>
       <!-- IF: a_pers_nbr IS p2.frm.sg -->
      <test><equal><clip pos="1" side="tl" part="a_pers_nbr"/> 
                             <lit-tag v="p2.frm.sg"/></equal></test>
        <!-- THEN: LET a_pers_nbr BE p2.pl -->
      <let><clip pos="1" side="tl" part="a_pers_nbr"/><lit-tag v="p2.pl"/></let>
    </when>
</choose>
<let>
<clip pos="1" side="tl" part="a_aspect"/><lit-tag v="prog"/>
</let>
        <let>
          <clip pos="1" side="tl" part="a_pers_nbr"/>
          <concat><lit v="+i"/><lit-tag v="cop.aor"/><clip pos="1" side="tl" part="a_pers_nbr"/></concat>
        </let>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: ger_past">
      <pattern>
        <pattern-item n="ger_past"/>
      </pattern>
      <action>
      <call-macro n="f_strip_tags"><with-param pos="1"/></call-macro>
        <let>
          <clip pos="1" side="tl" part="a_non_fin"/>
          <concat><lit-tag v="ger"/></concat>
        </let>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: XD">
      <pattern>
        <pattern-item n="XD"/>
      </pattern>
      <action>
      <call-macro n="f_strip_tags"><with-param pos="1"/></call-macro>
        <let>
          <clip pos="1" side="tl" part="a_xd"/>
          <concat><lit-tag v="px3sg"/></concat>
        </let>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: gpr_past">
      <pattern>
        <pattern-item n="gpr_past"/>
      </pattern>
      <action>
      <call-macro n="f_strip_tags"><with-param pos="1"/></call-macro>
        <let>
          <clip pos="1" side="tl" part="whole"/>
          <concat>
          <clip pos="1" side="tl" part="whole"/>
			<lit-tag v="subst.px3sp.nom"/>
			</concat>
        </let>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>




    <rule comment="REGLA: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
      <call-macro n="f_strip_tags"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


  </section-rules>
</transfer>

<!--
Resources:
    http://wiki.apertium.org/wiki/Chunking:_A_full_example
    http://wiki.apertium.org/wiki/Chunking
    http://wiki.apertium.org/wiki/Apertium_New_Language_Pair_HOWTO#Transfer_rules
    http://wiki.apertium.org/wiki/A_long_introduction_to_transfer_rules
    http://wiki.apertium.org/wiki/Transfer#Adding_structural_transfer_.28grammar.29_rules
-->

